/*
问题 F: 完全二叉树的根
时间限制: 10 Sec  内存限制: 128 MB
提交: 150  解决: 94
[提交][状态][讨论版]
题目描述
有一棵n个节点的完全二叉树，存储着 1~n 的值。

有n(n-1)(n-2)条关于这颗树的信息，每条信息，由一个四元组组成(i,j,k,0/1)(i≠j≠k)，均不完全一样。

若四元组最后一个元素为0，表示值为k的这个节点不是值为 i 的结点和值为 j 的结点的最近公共祖先，

若四元组最后一个元素为1，则反之。

基于给出的信息，求根结点的值。

输入
一行一个整数n (3 ≤ n ≤ 8)

接下来n(n-1)(n-2)行，每行四个整数表示四元组(i,j,k,0/1)(i≠j≠k)

输出
一行一个整数，表示树根节点的值

样例输入
3
1 3 2 0
3 1 2 0
3 2 1 0
2 3 1 0
1 2 3 1
2 1 3 1
样例输出
3
提示
*/

#include <iostream>

using namespace std;

int n, t, arr[1000][4];

int main()
{
    cin >> n;
    t = n * (n - 1) * (n - 2);

    for (int i = 0; i < t; i++)
    {
        for (int j = 0; j < 4; j++)
            cin >> arr[i][j];
    }

    for (int i = 0; i < t; i++)
    {
        for (int j = 0; j < t; j++)
        {
            if (arr[i][1] == arr[j][0] && arr[i][0] == arr[j][1] && arr[i][3] == 1 && arr[j][3] == 1)
            {
                cout << arr[i][2] << endl;
                return 0;
            }
        }
    }

    return 0;
}